{
    "docs": [
        {
            "location": "/",
            "text": "Predicting Protein Interactions\n\n\nPredict protein-interactions from raw pdb(protein-databank)-files. \nThis diagram illustrates the different functionallities of this software-tool and how the different parts relate to each other\n\n\n\n\nInstallation\n\n\nA script that trys to install all necessary dependencies can be found in \nsetUp/setUp.sh\n. Install all dependencies by typing:\n\n\n./setUp.sh\n\n\n\n\nIn order to view this documentation on your local machine type:\n\n\n./docs/createDoc.sh\n\n\n\n\nThis requires \nmkdocs\n to be installed.\n\n\n1. Predicting Protein Interactions\n\n\nExample Usage\n\n\nIn \n/QuickStart/SmallExample/\n a small example can be found on which the funtionality and correct installation can be tested.\nAdjust the parameters on your machine in the following call:\n\n\n/home/willy/PredictingProteinInteractions/Classification/./predictingProteinInteractions.R --mode SingleDistance --doClustering TRUE --pdb_folder /home/willy/PredictingProteinInteractions/QuickStart/SmallExample/pdb/ --distances_train /home/willy/PredictingProteinInteractions/QuickStart/SmallExample/UltraQuickRepSub/ --numberOfPoints 4 --rounds 10 --MutCompOutPut /home/willy/PredictingProteinInteractions/QuickStart/SmallExample/ --doMutComp TRUE --q_val 1 --labels_train /home/willy/PredictingProteinInteractions/data/106Test/labels.txt\n\n\n\n\nThis invokes the preprocessing with \nMutComp\n and \nVMD\n. Then \nUltraQuickRepeatedSubSampling\n is called and a dendrogram is produced.\nIf everything goes well the dendrogramms can be found in \n/QuickStart/SmallExample/Dendrogramms/\n and should look similar to this one:\n\n\n\n\n2. Preprocessing\n\n\nMutcomp\n\n\n(\nMutComp\n). \n\n\nThe standard path to the parameters-file is (for the use on the WS):\n\n\n/home/sysgen/Documents/LWB/TCL/MutComp/GUI/Parameters/parameters.txt\n\n\n\n\n. To run the script type:\n\n\n<pathToMutComp>./process.sh\n\n\n\n\nwhere \npathToMutComp\n is the path to the script.\nIf you want to use a different parameter-file just pass it as an argument to the script\n\n\n<pathToMutComp>./process.sh <path/to/a/different/parametersfile>\n\n\n\n\nOn my machine this call becomes: \n\n\n/home/willy/PredictingProteinInteractions/PreProcessingProteins/MutComp/./process.sh /home/willy/PredictingProteinInteractions/PreProcessingProteins/MutComp/GUI/Parameters/parametersForThesis.txt\n\n\n\n\nI strongly recommmend placing the \nparametersFile\n for each data-set in the same folder. \n\n\ncenterSelect\n\n\n(\ncenterSelect\n). \n\n\n3. Prediction\n\n\nBased on the approximation of the DE multiple features are calculated. Then data-augmentation is performed. \nThen a neural net is trained. The neural net can then be used to predict if two given proteins react with each other.\n\n\nProteins.R\n\n\nGiven the positive and negative potential of the proteins and the active center\ncalculate multiple features. These features are the quantiles of the approximation\nof the DE (Distribution of Eccentricities). The features are then used to train\na neural net.\n\n\nThere are two options:\n\n\n\n\ntraining a neural net and evaluating with k-fold-Cross-Validation. Additionally this model can be exported.\n\n\nusing a pre-trained model to make predictions on new data.\n\n\n\n\nIf you only want to generate the features (e.g. in case you want to call Clusterin.R afterwards) run with\nonlyGenerateModels = TRUE\n\n\nRequirements:\n\n\n\n\nIn the protein-folder the .obj-file has to be present which is delivered by MutComp.\n\n\nIf the measure should be updated with the information about the active center, then\nthe file \"active_center.pts\" has to be present which is delivered by selectCenter.R.\n\n\n\n\nUsage\n\n\n  pathToExperiment    ... path to the folder that contains all the folders of all proteins. (Output-folder of MutComp).\n\n  onlyGenerateModels  ... 1: only generate the features of the models. Else the features are generated and then the neural-net\n                             is trained.\n\n  mode                ... prediction/evaluation. Either make predictions on new data or perform k-fold-cv to evaluate a model.\n\n  parametersFile      ... contains the parameters need for the features and the neural net. Separated by ; the arguments\n                          are inserted row-wise. If no parametersFile is specified then the default-parameters are used..\n\n  outPutFolder        ... name of the folder in which all output is saved. The folder is placed in\n                          <pathToExperiment>/NNexperimentsKfoldCV/. So <outPutFolder> is no full path!\n\n\n\n\nMost of the ~50 parameters are specified in an additional \nparameters-file\n. Note that when executing this script the \nparameters specified on the commmand-line have higher priority and overwrite the parameters in the \nparameters-file\n.\n\n\nParameters related to the features\n\n\n  a1,a2,a3,a4,a5      ... specifies how important the active site is. a1, b1, n1 together form the parameters for one\n                          feature. Set to -1 if you want to use fewer features.\n\n  b1,b2,b3,b4,b5      ... specifies how important the boarder region is. a1, b1, n1 together form the parameters for one\n                          feature. Set to -1 if you want to use fewer features.\n\n  mNearestNeighbors   ... how many points in close proximity to the boarder-area are considered.\n\n  n1,n2,n3,n4,n5      ... in (0,1). Specifies how local the feature is. a1, b1, n1 together form the parameters for one\n                          feature. Set to -1 if you want to use fewer features.\n\n  recalculateModel    ... specifies if the preprocessing should be recalculated. If set to 0, if the file allready exists\n                          it is not recalculated.\n\n  recalculateQuants   ... specifies if the quantiles should be recalculated. If set to 0 then if the file allready exists\n                          it is not recalculated.\n\n  n_s_euclidean       ... number of points to select with the euclidean fps (farthest-point-sampling-procedure).\n\n  n_s_dijkstra        ... number of points to select with the geodesic fps (farthest-point-sampling-procedure).\n\n  stitchNum           ... number of points that are created from Manifold.\n\n\n\n\nParameters related to the neural net\n\n\nExemplary Parameters-File\n\n\nAn exemplary parameters-file is shown below. The parameters for both the features and the \nneural net are stored in this file. The columns are \",\"-separated.\n\n\n\n\n\n\n\n\nparameter\n\n\nvalue\n\n\n\n\n\n\n\n\n\n\na1\n\n\n1\n\n\n\n\n\n\na2\n\n\n1\n\n\n\n\n\n\na3\n\n\n1\n\n\n\n\n\n\na4\n\n\n1\n\n\n\n\n\n\na5\n\n\n1\n\n\n\n\n\n\nb1\n\n\n1\n\n\n\n\n\n\nb2\n\n\n1\n\n\n\n\n\n\nb3\n\n\n1\n\n\n\n\n\n\nb4\n\n\n1\n\n\n\n\n\n\nb5\n\n\n1\n\n\n\n\n\n\nn1\n\n\n0.1\n\n\n\n\n\n\nn2\n\n\n0.2\n\n\n\n\n\n\nn3\n\n\n0.3\n\n\n\n\n\n\nn4\n\n\n0.5\n\n\n\n\n\n\nn5\n\n\n0.8\n\n\n\n\n\n\nmNearestNeighbor\n\n\n10\n\n\n\n\n\n\npathToExperiment\n\n\n/home/willy/PredictingProteinInteractions//data/106Test/Output/\n\n\n\n\n\n\nn_s_euclidean\n\n\n1000\n\n\n\n\n\n\nn_s_dijkstra\n\n\n1000\n\n\n\n\n\n\nstitchNum\n\n\n2000\n\n\n\n\n\n\nrecalculateModel\n\n\n0\n\n\n\n\n\n\nrecalculateQuants\n\n\n0\n\n\n\n\n\n\nsampleSize\n\n\n20\n\n\n\n\n\n\nl1\n\n\n100\n\n\n\n\n\n\nl2\n\n\n100\n\n\n\n\n\n\nl3\n\n\n100\n\n\n\n\n\n\nl4\n\n\n50\n\n\n\n\n\n\nl5\n\n\n30\n\n\n\n\n\n\nd1\n\n\n0.2\n\n\n\n\n\n\nd2\n\n\n0.2\n\n\n\n\n\n\nd3\n\n\n0.2\n\n\n\n\n\n\nd4\n\n\n0.2\n\n\n\n\n\n\nd5\n\n\n0.2\n\n\n\n\n\n\nepochs\n\n\n20\n\n\n\n\n\n\nbatchSize\n\n\n16\n\n\n\n\n\n\nexperimentName\n\n\nDummy\n\n\n\n\n\n\nrecalculateNN\n\n\n0\n\n\n\n\n\n\nkFolds\n\n\n10\n\n\n\n\n\n\nnumPermutations\n\n\n400\n\n\n\n\n\n\nnumCores\n\n\n4\n\n\n\n\n\n\nmode\n\n\nevaluation\n\n\n\n\n\n\n\n\nOutput\n\n\nFor each fold three files are created: \naccuracy.txt\n, \nf1_score.txt\n, \nconfMat.txt\n storing the accuracy, the F1-score and the confusion-matrix. Additionaly three such files with tex-extensions are created which are obtained by averaging over the folds. \n\n\nCreating a classifier and evaluating it\n\n\nIf mode is set to \"evaluation\" then the necessary features are generated as specified in \nparametersFile\n. \nThen with k-fold cross-validation a neural net is trained. For each fold the accuracy, F1-score and confusion-matrix is saved.\nIn case of k == 1 additionally the finall trained model is exported. This model can then be used for prediction of new data.\n\n\nAn exemplary call looks like this:\n\n\n./Proteins.R --pathToExperiment /home/willy/PredictingProteinInteractions/data/106Test/Output/ --mode evaluation --outPutFolder Dummy2\n\n\n\n\nThe output is a confusion-matrix (here with k == 1) and might look like this:\n\n\n\n\n\n\n\n\n\n\nfunctional\n\n\nnot_functional\n\n\n\n\n\n\n\n\n\n\nfunctional\n\n\n0.90000000\n\n\n0.02865169\n\n\n\n\n\n\nnot_functional\n\n\n0.10000000\n\n\n0.97134831\n\n\n\n\n\n\n\n\nKeep in mind that with lower k, that means a lower number of different folds, the reliabilty of the evaluation of the model for new unseen data shrinks. \nWith k == 1, the evaluation is only a training-error and hence does not show how well the model will perform on unseen data.\n\n\nPredicting new data\n\n\nIf mode is set to \"predict\" then a previously trained neural net is read in and a folder containing new data has to be specified.\nFor the proteins in that new folder predictions are made with the neural net.\n\n\nAn exemplary call looks like this:\n\n\n./Proteins.R --outPutFolder Dummy5 --pathToExperiment /home/willy/PredictingProteinInteractions/data/NewPredTest/Output/ --mode prediction --nnModelFolder /home/willy/PredictingProteinInteractions/data/106Test/NNexperimentsKfoldCV/Dummy2/\n\n\n\n\nThe above call creates a new folder \n/home/willy/PredictingProteinInteractions/data/NewPredTest/Output/NNexperimentsKfoldCV/Dummy5/\n in which all data will be stored. \nPredictions will be made for all proteins that can be found in the folder \n/home/willy/PredictingProteinInteractions/data/NewPredTest/Output/\n. The previously trained neural net that will be used for prediction is located in \n/home/willy/PredictingProteinInteractions/data/106Test/NNexperimentsKfoldCV/Dummy2/\n. \n\n\nThe predictions are then stored in a file \npredictions.txt\n. Row-wise the names of the proteins are denoted. Column-wise the predicted probabilities for the specific class can be seen.\n\n\n\n\n\n\n\n\nname\n\n\nfunctional\n\n\nnot_functional\n\n\n\n\n\n\n\n\n\n\n1aba\n\n\n0.2\n\n\n0.8\n\n\n\n\n\n\n5e37\n\n\n0.1\n\n\n0.9\n\n\n\n\n\n\n5j3r\n\n\n0\n\n\n1\n\n\n\n\n\n\n5jy5\n\n\n0.01\n\n\n0.99\n\n\n\n\n\n\n\n\n4. Clustering\n\n\nCreate dendrograms like this one from the 106-Redoxin-data-set:\n\n\n\n\nUltraQuickRepeatedSubSampling.R\n\n\nCalculate all pairwise distances between the proteins. From this distance-matrix build an agglomerative bottom-up clustering.\n\n\nCalculate the repeatedSubSampling fast. The points are only sampled m times once for each protein. Then the distributions are calculated. Then from these distributions the quantile-\napproximation is calculated. The DE is then calculated with the manhattan distance between\nthe quantiles.\n\n\nUsage\n\n\n  ProteinsPath        ... path to all proteins as produced by MutComp\n\n  distance_name       ... folder in which all distance-matrices will be stored\n\n  n                   ... number of points to select (see parameters of RepeatedSampling)\n\n  m                   ... sqrt(number of repeatitions)\n\n  q                   ... number of subdivisions of the integral. Basically a higher q\n                          leads to a more accurate approximation. Currently it has to hold\n                          q < n.\n\n  potential           ... pos/neg\n\n  distance_method     ... geo/emd\n\n\n  plot                ... in case of (q == 2) the approximations are ploted into the 2d-plane.\n                          Else no plot is created with a warn-message.\n\n\n  labels              ... a file containing for each protein a label functional/not_functional\n\n  cores               ... number of cores to run on. Trys to detect the number of cores\n                          automatically. If this fails the number of cores is set to 6\n                          by default.\n\n\n\n\nClustering.R\n\n\nTrain an auto-encoder that reduces the number of features of the proteins. Then the\nbottle-neck-layer is extracted and used to extract a condensed representation of\nthe proteins. With these condensed representations then an agglomerative, bottom-up\nclustering is performed. With this clustering then a dendrogram is obtained.\n\n\nUsage\n\n\n  inputPath           ... path to a file with a .Rdata-extension that stores the feature-matrix for\n                          all proteins. Can be obtained by running Proteins.R.\n\n  dendrogramName      ... name of the dendrogram-file. Without the (.pdf)-extension and prefix Dendrogram.\n\n  numPermutations     ... number of permutations that are created for each representation. For\n                          each protein m rows from the feature-matrix are combined. The order of\n                          this m rows is randomly permutated and numPermutations different\n                          representations are created.\n\n  m                   ... number of rows from the feature-matrix that are combined for each protein-model.\n\n  epochs              ... number of epochs to train the autoencoder.\n\n  batchSize           ... size of a batch. Relevant for the training.\n\n  l1,l2,l3            ... specifies the encoder-dimensions, that is the size of each layer in the network.\n                          The autoencoder in this implementation has 3 layers.\n\n  d1,d2,d3            ... in [0,1) specifies the dropout-rates.",
            "title": "Home"
        },
        {
            "location": "/#predicting-protein-interactions",
            "text": "Predict protein-interactions from raw pdb(protein-databank)-files. \nThis diagram illustrates the different functionallities of this software-tool and how the different parts relate to each other",
            "title": "Predicting Protein Interactions"
        },
        {
            "location": "/#installation",
            "text": "A script that trys to install all necessary dependencies can be found in  setUp/setUp.sh . Install all dependencies by typing:  ./setUp.sh  In order to view this documentation on your local machine type:  ./docs/createDoc.sh  This requires  mkdocs  to be installed.",
            "title": "Installation"
        },
        {
            "location": "/#1-predicting-protein-interactions",
            "text": "",
            "title": "1. Predicting Protein Interactions"
        },
        {
            "location": "/#example-usage",
            "text": "In  /QuickStart/SmallExample/  a small example can be found on which the funtionality and correct installation can be tested.\nAdjust the parameters on your machine in the following call:  /home/willy/PredictingProteinInteractions/Classification/./predictingProteinInteractions.R --mode SingleDistance --doClustering TRUE --pdb_folder /home/willy/PredictingProteinInteractions/QuickStart/SmallExample/pdb/ --distances_train /home/willy/PredictingProteinInteractions/QuickStart/SmallExample/UltraQuickRepSub/ --numberOfPoints 4 --rounds 10 --MutCompOutPut /home/willy/PredictingProteinInteractions/QuickStart/SmallExample/ --doMutComp TRUE --q_val 1 --labels_train /home/willy/PredictingProteinInteractions/data/106Test/labels.txt  This invokes the preprocessing with  MutComp  and  VMD . Then  UltraQuickRepeatedSubSampling  is called and a dendrogram is produced.\nIf everything goes well the dendrogramms can be found in  /QuickStart/SmallExample/Dendrogramms/  and should look similar to this one:",
            "title": "Example Usage"
        },
        {
            "location": "/#2-preprocessing",
            "text": "",
            "title": "2. Preprocessing"
        },
        {
            "location": "/#mutcomp",
            "text": "( MutComp ).   The standard path to the parameters-file is (for the use on the WS):  /home/sysgen/Documents/LWB/TCL/MutComp/GUI/Parameters/parameters.txt  . To run the script type:  <pathToMutComp>./process.sh  where  pathToMutComp  is the path to the script.\nIf you want to use a different parameter-file just pass it as an argument to the script  <pathToMutComp>./process.sh <path/to/a/different/parametersfile>  On my machine this call becomes:   /home/willy/PredictingProteinInteractions/PreProcessingProteins/MutComp/./process.sh /home/willy/PredictingProteinInteractions/PreProcessingProteins/MutComp/GUI/Parameters/parametersForThesis.txt  I strongly recommmend placing the  parametersFile  for each data-set in the same folder.",
            "title": "Mutcomp"
        },
        {
            "location": "/#centerselect",
            "text": "( centerSelect ).",
            "title": "centerSelect"
        },
        {
            "location": "/#3-prediction",
            "text": "Based on the approximation of the DE multiple features are calculated. Then data-augmentation is performed. \nThen a neural net is trained. The neural net can then be used to predict if two given proteins react with each other.",
            "title": "3. Prediction"
        },
        {
            "location": "/#proteinsr",
            "text": "Given the positive and negative potential of the proteins and the active center\ncalculate multiple features. These features are the quantiles of the approximation\nof the DE (Distribution of Eccentricities). The features are then used to train\na neural net.  There are two options:   training a neural net and evaluating with k-fold-Cross-Validation. Additionally this model can be exported.  using a pre-trained model to make predictions on new data.   If you only want to generate the features (e.g. in case you want to call Clusterin.R afterwards) run with\nonlyGenerateModels = TRUE",
            "title": "Proteins.R"
        },
        {
            "location": "/#requirements",
            "text": "In the protein-folder the .obj-file has to be present which is delivered by MutComp.  If the measure should be updated with the information about the active center, then\nthe file \"active_center.pts\" has to be present which is delivered by selectCenter.R.",
            "title": "Requirements:"
        },
        {
            "location": "/#usage",
            "text": "pathToExperiment    ... path to the folder that contains all the folders of all proteins. (Output-folder of MutComp).\n\n  onlyGenerateModels  ... 1: only generate the features of the models. Else the features are generated and then the neural-net\n                             is trained.\n\n  mode                ... prediction/evaluation. Either make predictions on new data or perform k-fold-cv to evaluate a model.\n\n  parametersFile      ... contains the parameters need for the features and the neural net. Separated by ; the arguments\n                          are inserted row-wise. If no parametersFile is specified then the default-parameters are used..\n\n  outPutFolder        ... name of the folder in which all output is saved. The folder is placed in\n                          <pathToExperiment>/NNexperimentsKfoldCV/. So <outPutFolder> is no full path!  Most of the ~50 parameters are specified in an additional  parameters-file . Note that when executing this script the \nparameters specified on the commmand-line have higher priority and overwrite the parameters in the  parameters-file .",
            "title": "Usage"
        },
        {
            "location": "/#parameters-related-to-the-features",
            "text": "a1,a2,a3,a4,a5      ... specifies how important the active site is. a1, b1, n1 together form the parameters for one\n                          feature. Set to -1 if you want to use fewer features.\n\n  b1,b2,b3,b4,b5      ... specifies how important the boarder region is. a1, b1, n1 together form the parameters for one\n                          feature. Set to -1 if you want to use fewer features.\n\n  mNearestNeighbors   ... how many points in close proximity to the boarder-area are considered.\n\n  n1,n2,n3,n4,n5      ... in (0,1). Specifies how local the feature is. a1, b1, n1 together form the parameters for one\n                          feature. Set to -1 if you want to use fewer features.\n\n  recalculateModel    ... specifies if the preprocessing should be recalculated. If set to 0, if the file allready exists\n                          it is not recalculated.\n\n  recalculateQuants   ... specifies if the quantiles should be recalculated. If set to 0 then if the file allready exists\n                          it is not recalculated.\n\n  n_s_euclidean       ... number of points to select with the euclidean fps (farthest-point-sampling-procedure).\n\n  n_s_dijkstra        ... number of points to select with the geodesic fps (farthest-point-sampling-procedure).\n\n  stitchNum           ... number of points that are created from Manifold.",
            "title": "Parameters related to the features"
        },
        {
            "location": "/#parameters-related-to-the-neural-net",
            "text": "",
            "title": "Parameters related to the neural net"
        },
        {
            "location": "/#exemplary-parameters-file",
            "text": "An exemplary parameters-file is shown below. The parameters for both the features and the \nneural net are stored in this file. The columns are \",\"-separated.     parameter  value      a1  1    a2  1    a3  1    a4  1    a5  1    b1  1    b2  1    b3  1    b4  1    b5  1    n1  0.1    n2  0.2    n3  0.3    n4  0.5    n5  0.8    mNearestNeighbor  10    pathToExperiment  /home/willy/PredictingProteinInteractions//data/106Test/Output/    n_s_euclidean  1000    n_s_dijkstra  1000    stitchNum  2000    recalculateModel  0    recalculateQuants  0    sampleSize  20    l1  100    l2  100    l3  100    l4  50    l5  30    d1  0.2    d2  0.2    d3  0.2    d4  0.2    d5  0.2    epochs  20    batchSize  16    experimentName  Dummy    recalculateNN  0    kFolds  10    numPermutations  400    numCores  4    mode  evaluation",
            "title": "Exemplary Parameters-File"
        },
        {
            "location": "/#output",
            "text": "For each fold three files are created:  accuracy.txt ,  f1_score.txt ,  confMat.txt  storing the accuracy, the F1-score and the confusion-matrix. Additionaly three such files with tex-extensions are created which are obtained by averaging over the folds.",
            "title": "Output"
        },
        {
            "location": "/#creating-a-classifier-and-evaluating-it",
            "text": "If mode is set to \"evaluation\" then the necessary features are generated as specified in  parametersFile . \nThen with k-fold cross-validation a neural net is trained. For each fold the accuracy, F1-score and confusion-matrix is saved.\nIn case of k == 1 additionally the finall trained model is exported. This model can then be used for prediction of new data.  An exemplary call looks like this:  ./Proteins.R --pathToExperiment /home/willy/PredictingProteinInteractions/data/106Test/Output/ --mode evaluation --outPutFolder Dummy2  The output is a confusion-matrix (here with k == 1) and might look like this:      functional  not_functional      functional  0.90000000  0.02865169    not_functional  0.10000000  0.97134831     Keep in mind that with lower k, that means a lower number of different folds, the reliabilty of the evaluation of the model for new unseen data shrinks. \nWith k == 1, the evaluation is only a training-error and hence does not show how well the model will perform on unseen data.",
            "title": "Creating a classifier and evaluating it"
        },
        {
            "location": "/#predicting-new-data",
            "text": "If mode is set to \"predict\" then a previously trained neural net is read in and a folder containing new data has to be specified.\nFor the proteins in that new folder predictions are made with the neural net.  An exemplary call looks like this:  ./Proteins.R --outPutFolder Dummy5 --pathToExperiment /home/willy/PredictingProteinInteractions/data/NewPredTest/Output/ --mode prediction --nnModelFolder /home/willy/PredictingProteinInteractions/data/106Test/NNexperimentsKfoldCV/Dummy2/  The above call creates a new folder  /home/willy/PredictingProteinInteractions/data/NewPredTest/Output/NNexperimentsKfoldCV/Dummy5/  in which all data will be stored. \nPredictions will be made for all proteins that can be found in the folder  /home/willy/PredictingProteinInteractions/data/NewPredTest/Output/ . The previously trained neural net that will be used for prediction is located in  /home/willy/PredictingProteinInteractions/data/106Test/NNexperimentsKfoldCV/Dummy2/ .   The predictions are then stored in a file  predictions.txt . Row-wise the names of the proteins are denoted. Column-wise the predicted probabilities for the specific class can be seen.     name  functional  not_functional      1aba  0.2  0.8    5e37  0.1  0.9    5j3r  0  1    5jy5  0.01  0.99",
            "title": "Predicting new data"
        },
        {
            "location": "/#4-clustering",
            "text": "Create dendrograms like this one from the 106-Redoxin-data-set:",
            "title": "4. Clustering"
        },
        {
            "location": "/#ultraquickrepeatedsubsamplingr",
            "text": "Calculate all pairwise distances between the proteins. From this distance-matrix build an agglomerative bottom-up clustering.  Calculate the repeatedSubSampling fast. The points are only sampled m times once for each protein. Then the distributions are calculated. Then from these distributions the quantile-\napproximation is calculated. The DE is then calculated with the manhattan distance between\nthe quantiles.",
            "title": "UltraQuickRepeatedSubSampling.R"
        },
        {
            "location": "/#usage_1",
            "text": "ProteinsPath        ... path to all proteins as produced by MutComp\n\n  distance_name       ... folder in which all distance-matrices will be stored\n\n  n                   ... number of points to select (see parameters of RepeatedSampling)\n\n  m                   ... sqrt(number of repeatitions)\n\n  q                   ... number of subdivisions of the integral. Basically a higher q\n                          leads to a more accurate approximation. Currently it has to hold\n                          q < n.\n\n  potential           ... pos/neg\n\n  distance_method     ... geo/emd\n\n\n  plot                ... in case of (q == 2) the approximations are ploted into the 2d-plane.\n                          Else no plot is created with a warn-message.\n\n\n  labels              ... a file containing for each protein a label functional/not_functional\n\n  cores               ... number of cores to run on. Trys to detect the number of cores\n                          automatically. If this fails the number of cores is set to 6\n                          by default.",
            "title": "Usage"
        },
        {
            "location": "/#clusteringr",
            "text": "Train an auto-encoder that reduces the number of features of the proteins. Then the\nbottle-neck-layer is extracted and used to extract a condensed representation of\nthe proteins. With these condensed representations then an agglomerative, bottom-up\nclustering is performed. With this clustering then a dendrogram is obtained.",
            "title": "Clustering.R"
        },
        {
            "location": "/#usage_2",
            "text": "inputPath           ... path to a file with a .Rdata-extension that stores the feature-matrix for\n                          all proteins. Can be obtained by running Proteins.R.\n\n  dendrogramName      ... name of the dendrogram-file. Without the (.pdf)-extension and prefix Dendrogram.\n\n  numPermutations     ... number of permutations that are created for each representation. For\n                          each protein m rows from the feature-matrix are combined. The order of\n                          this m rows is randomly permutated and numPermutations different\n                          representations are created.\n\n  m                   ... number of rows from the feature-matrix that are combined for each protein-model.\n\n  epochs              ... number of epochs to train the autoencoder.\n\n  batchSize           ... size of a batch. Relevant for the training.\n\n  l1,l2,l3            ... specifies the encoder-dimensions, that is the size of each layer in the network.\n                          The autoencoder in this implementation has 3 layers.\n\n  d1,d2,d3            ... in [0,1) specifies the dropout-rates.",
            "title": "Usage"
        },
        {
            "location": "/about/",
            "text": "Metric Geometry",
            "title": "About"
        },
        {
            "location": "/about/#metric-geometry",
            "text": "",
            "title": "Metric Geometry"
        },
        {
            "location": "/index_pre_25.10/",
            "text": "Predicting Protein Interactions\n\n\nPredict protein-protein-interactions from raw pdb(protein-databank)-files. Find the thesis in \nMasterthesis.pdf\n. \n\n\nThis document gives instructions on how to recreate the data that was used in the thesis. As a first step it only serves as a documentation for me personally. The idea is however to transfer this data directly to the CD that has to be submitted with the thesis. \n(Willy Bruhn, 13.4.2019)\n\n\nFolder Hierarchy\n\n\n\u251c\u2500\u2500 Classification\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 CaretClassification\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 NNClassification\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 additionalScripts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 optimizeDifferentModels\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 predictingProteinInteractionsSettings\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tfClassification\n\u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 106Test\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 CompareProteinsOutput\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Input\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 NNexperiments\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 NNexperimentsKfoldCV\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Output\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 QuantileDistances\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Quantiles\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 RepSubOutput\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 UltraQuickRepSub\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 120Experiment\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Input\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 NNexperimentsKfoldCV\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 NNexperimentsKfoldCV (copy)\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Output\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Quantiles\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 UltraQuickRepSub\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 animals\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Evaluation\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Evaluation (copy)\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 models\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __MACOSX\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 ModelNet10\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 MNist\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ModelNet10\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 AllQuantilesDir\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 AllQuantilesDirStandard\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __MACOSX\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 ModelNet10\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 nonRigidWorld\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 nonrigid3d\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ObjectNet3D_cads\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 ObjectNet3D\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 old\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 106Redoxins\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 106RedoxinsWithAddionalPDBS_1\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 additionalPDBS_1\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 animals\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pdbDownloaderExperiment\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Input\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 merged\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 NNexperimentsKfoldCV\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Output\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Quantiles\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 QuickRep\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 psb_db0-3\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 benchmark\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 Manifold\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 3rd\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Eigen\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 glm\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 igl\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 unsupported\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 build\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 CMakeFiles\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 examples\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 src\n\u251c\u2500\u2500 MetricGeometry\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Benchmark\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 QuickRep\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ComparingProteins\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 EMDandClustering\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 LowerBounds\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Downsampling2Step\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 QuickRepeatedSubSampling\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 RepeatedSubsampling\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 FirstLowerBoundRelationOfPosAndNeg\n\u251c\u2500\u2500 PCL\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 IsoSurfSimilarity\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Debug\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Release\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 ptsToPcd\n\u251c\u2500\u2500 pdbDownloader\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Drugs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 merged\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 P03372_pdbs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 P06401_pdbs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 P10275_pdbs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 P11511_pdbs\n\u251c\u2500\u2500 PreProcessingProteins\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 centerSelect\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 AA_utility\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Ars\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 example\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 exampleImages\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 experimental\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 parameters\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 Redox\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 MutComp\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 APBS\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 deprecated\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 ExampleHierarchy\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 GUI\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 ImageCreator\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 ImageSimilarity\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 MovieCreator\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 mutationTest\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Output\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 TclScripts\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 Tests\n\u251c\u2500\u2500 QuickStart\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ModelTrain\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 bestModel\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 pdb\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Proteins\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 RepeatedSubSampling\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Predictions\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 distances\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 proteins\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 Test\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 pdb\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 Proteins\n\u251c\u2500\u2500 Results\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Examples\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 MeasureCouplings\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Images\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 activeCenter\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 animalModels\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 FinalModel\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 longRange\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 protMeasureProjection\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 QuickRepSampling\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 2dPlots\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 EmdVsGeo\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 Examples\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Scripts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Tables\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 TablesProt\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 TablesProtStatKFoldCV\n\u2514\u2500\u2500 setUp\n\n\n\n\n\nQuickStart\n\n\nBefore you can run this example make sure that all dependencies are installed. A script that trys to do that can be found in \nsetUp/setUp.sh\n. Install all dependencies by typing:\n\n\n./setUp.sh\n\n\n\n\nThe folder \nQuickStart\n contains a fully setup example that demonstrates what this implementation can do.\nIn \nModelTrain/pdb/\n pdb-files are stored to train a model. The file \nModelTrain/labels.txt\n contains the labels of the proteins (in this case \nfunctional\n and \nnot_functional\n, you can specify any label however). In \nTest/pdb/\n the pdb-files are stored that predictions should be made for. To build the model type:\n\n\n../Classification/./predictingProteinInteractions.R\n\n\n\n\nAfter the script is executed you should have an optimized model in \nModelTrain/bestModel/bestModel.RData\n. This file is in a binary-format and can only be read with the R-function \nreadDs\n. Additionally the computed distances are stored in \nModelTrain/RepeatedSubSampling/\n.\nNow make predictions:\n\n\n../Classification/./predictingProteinInteractions.R --mode Predict --pdb_folder <path/To/QuickStart>/Test/pdb/ --MutCompOutPut <path/To/QuickStart>/Test/Proteins/\n\n\n\n\nThe predictions are now stored in \nPredictions/predictions.txt\n. The prediction-file has three columns:\nthe name of the protein, probability for \nfunctional\n probability for \nnot_functional\n.\nThe output might look like this:\n\n\n\n\n\n\n\n\n\"ind\"\n\n\n\"functional\"\n\n\n\"not_functional\"\n\n\n\n\n\n\n\n\n\n\n\"013\"\n\n\n0.554907677356657\n\n\n0.445092322643343\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n1. Classification\n\n\nContains one script that does a classification given one distance-matrix and labels and other parameters for the model.\n\n\nInput:\ndistance_f_name(\"\")           ... name of the file with the distances\n\ndistance_format(1)\n                           = 1 ... a simple distance-matrix\n                           = 3 ... a 3 column-data-frame. First column ProtA\n                                   second column ProtB, third column distance.\n\n labels_train                   ... name of the file with the labels\n\n evaluate(TRUE)        \n                           = 1 ... with crossvalidation the model is tested\n                           = 2 ... the model is tested on the testset\n                           = 0 ... the model makes predictions on new data\n                                   to which not all classlabels are given.\n\n evaluate_n                    ... number of times to repeat the classification.\n                                   Higher number leads to more accurate estimation.\n\n kNN                           ... number of nearest neighbors to use for the majority-\n                                   voting.\n\n test_split                    ... if(evaluate == 2) then this file specifies\n                                   the names to be tested with a model built from \n                                   the remaining names.\n\n\n\n\n2. data\n\n\n106Redoxins\n\n\nContains the protein-test-set.\n\n\nadditionalPDBS_1\n\n\nContains 19 Redoxins that are very simialr to Thrx.\n\n\n106RedoxinsWithAdditionalPDBS_1\n\n\nContains the output of \n106Redoxins\n and \nadditionalPDBS_1\n together in one folder. The files have to be in one folder for the calculation of the distances.\n\n\nOutputMerged\n\n\nFolder with all the pts-files.\n\n\nRepeatedSubsampling\n\n\n../../MetricGeometry/RepeatedSubsampling/FirstLowerBoundRelationOfPosAndNeg/cmakeBin/./main /home/willy/PredictingProteinInteractions/data/106RedoxinsWithAddionalPDBS_1/OutputMerged/ /home/willy/PredictingProteinInteractions/data/106RedoxinsWithAddionalPDBS_1/RepSubOutput/ /home/willy/PredictingProteinInteractions/data/106RedoxinsWithAddionalPDBS_1/OutputMerged/names.txt /home/willy/PredictingProteinInteractions/data/106RedoxinsWithAddionalPDBS_1/OutputMerged/names.txt 1 100 500 1 0.0 0.0 test 0\n\n\n\n\nclassification of RepeatedSubsampling\n\n\n../../Classification/./NNClassification.R --evaluate 0 --distance_format 3 --distance_f_name /home/willy/PredictingProteinInteractions/data/106RedoxinsWithAddionalPDBS_1/RepSubOutput/EMD_100_500_1.0000_1.0000_0.0000_0.0000_id_test.csv --kNN 10 --evaluate_n 1000 --test_split /home/willy/PredictingProteinInteractions/data/106Redoxins/Labels/testNames.txt --labels_train /home/willy/PredictingProteinInteractions/data/106Redoxins/Labels/labels.txt > predictions.txt\n\n\n\n\nRepSubOutput\n\n\nFolder with the distances obtained with the repeated-subsampling-method.\n\n\nActive Center\n\n\nanimals\n\n\nContains the models of the animals also used in Memolis Paper.\n\n\n3. Metric Geometry\n\n\nMetricGeometry/ComparingProteins/\n contains the original implementation of Felix Berens cloned from Git-hub (\nComparingProteins\n, 04.13.2019). \n\n\nComparingProteins\n\n\nSee for more details \nComparingProteins\n.\n\n\nModifications:\n* Other shebang for linux \n#!/usr/bin/Rscript\n\n\nDownsampling2Step\n\n\nContains the implementation of the 2-step-downsampling-procedure.\n\n\nRepeatedSubsampling\n\n\nThis folder contains the C++ implementation based on the original implementation of the \nFLB\n \nComparingProteins\n by Felix Berens. An example call would be:\n\n\npa=\"/home/willy/RedoxChallenges/MasterThesis/IsoSurfSimilarity/data/Output/\"\n./main $pa /home/willy/Schreibtisch/repeatedSampling/ /home/willy/RedoxChallenges/MasterThesis/IsoSurfSimilarity/ComparingProteins/LowerBounds/FirstLowerBoundRelationOfPosAndNeg/Example/proteinsTestSmall.txt /home/willy/RedoxChallenges/MasterThesis/IsoSurfSimilarity/ComparingProteins/LowerBounds/FirstLowerBoundRelationOfPosAndNeg/Example/proteinsTestSmall.txt 1 2 5 1 0.0 0.0 test 0\n\n\n\n\n. More example-calls can be found in \n/home/willy/PredictingProteinInteractions/MetricGeometry/RepeatedSubsampling/FirstLowerBoundRelationOfPosAndNeg/example\n.\n\n\nUsage\n\n\n  string path = argv[1];                                        // path to the folder with the proteins and pts-files\n  string outPath = argv[2];                                 // path to the folder where the output of this programm should be stored\n  string proteinsToCompareFile_target = argv[3];    // proteins to compare to, usually only Trx or all proteins\n  string proteinsToCompareFile = argv[4];               // all other proteins\n\n  measure = stod(argv[5]);                                  // model parameter, measure == 1 equals a uniform-distribution\n    number_of_selected_points = atoi(argv[6]);        // model parameters n\n    rounds = atoi(argv[7]);                                     // model parameters m\n\n  c1 = stod(argv[8]);                                 // model parameters\n  c2 = stod(argv[9]);                                 // model parameters\n  c3 = stod(argv[10]);                              // model parameters\n\n  num_bins = log2(rounds)+1;                        // model parameters\n\n  emd_list_id = argv[11];                           // for running multiple times with same parameters\n    bool allParameterCombinations = (bool)atoi(argv[12]); // for optimizing the modelparameters\n\n    int NNtoActCent = atoi(argv[13]);               // = 0 then all points are taken\n\n\n\n\nCompilation\n\n\nGo to \n/FirstLowerBoundRelationOfPosAndNeg/cmakeBin/\n and type\n\n\ncmake ..\n\n\n\n\nand then type \n\n\nmake\n\n\n\n\nTo run the program type:\n\n\n./main\n\n\n\n\n4. PCL\n\n\nContains the implementation that makes use of the ICP(iterative-closest-point-algorithm) of the \nPoint-Cloud-Library\n. \n\n\nSetting Up\n\n\nWith the script \n\\IsoSurfSimilarity\\setUp.sh\n some dependencies are installed and downloaded.\n\n\nUsage\n\n\nFor this implementation a seperate file called \nsettings.ini\n is used\n\n\nICP = 0                             ... if 0: a genetic algorithm is performed\n                                    ... if 1: the ICP-algorithm is performed\n\nICPiterations = 100                 ... if (ICP = 1): number of iterations to run ICP\n\nK = 0                               ... (if ICP = 0) In the step of finding the nearest neighbour in the potential of the other protein\n                                                     this number specifies how many points should be considered. Given two points a similarity is\n                                                     calculated depending on the distance to the active center and the local distribution of     \n                                                     positive and negative points. Under the K nearest neighbours to the given point in euclidean \n                                                     space the point is chosen that has the highest similarity.\n\n\nWindowSize = 200                    ... size of the small Window for display\n\ndisplayWeightTH = 10                ... show only points with a weight higher than \"displayWeightTH\".\n\nevalFunction = simpleSqrdDistances  ... (if ICP = 0) specifies which evaluation-function for the distance should be taken\n                                            if \"simpleSqrdDistances\" then for each point in X the closest point in Y is taken\n                                            and the corresponding distance is squared. This is done for all points in X.\n                                            All of these values are summed up. Analogously for Y. The sum of the two sums is\n                                            the final value.\n\ngenNum = 100                        ... (if ICP = 0) specifies how many generations the genetic algorithm should run for\n\noverWriteExistingInd = 1            ... if 1: overwrites a previous (if existing) solution, if the new one is better\n                                    ... if 0: if another solution exists this new solution is discarded\n\npath2Data = /home/willy/RedoxChallenges/MasterThesis/IsoSurfSimilarity/data/Output/\n                                    ... path to where the data is stored\n\npopSize = 25                        ... if (ICP = 0): number of individuals in the population for the\n                                        genetic algorithm\n\nprot1FileName = 000_Trx             ... name of the protein to be read in. This would for example be\n                                    /home/willy/RedoxChallenges/MasterThesis/IsoSurfSimilarity/data/Output/000_Trx/000_Trx.pcd\n\n                                    If you get an error-message showing something like \n                                    \"[pcl::PCDReader::readHeader] Could not find file \n                                    '/home/willy/PredictingProteinInteractions/data/106Redoxins/Output//000_Trx/000_Trx.pcd'.\n                                    Error loading object/scene file!\" \n                                    please make sure to run ptsToPcd.sh beforehand.\n\n\nprot2FileName = 103                 ... name of the protein to be read in. This would for example be\n                                    /home/willy/RedoxChallenges/MasterThesis/IsoSurfSimilarity/data/Output/103/103.pcd\n\nrange = 0                           ... (if ICP = 0) specifies an upper bound for the entries in the translation-vector of the individuals \n                                          in the genetic algorithm.\n\n                                          if range = 0: then only the rotations are optimized. (The proteins are centered on the active center.)\n\nvisInteractive = 1                  ... if 1: an interactive model is displayed\n                                    ... if 2: an interactive model is displayed \n                                              and the model is recalculated\n                                    ... else: a model is calculated\n\n\n\n\nGenerating pcd(Point-Cloud-Data)-files\n\n\nThe PCL uses its own file-format.\nWith the scripts \nptsToPcd.sh\n and \nptsToPcl.R\n the pcd-files can be generated.\n\n\nIn \nptsToPcd.sh\n change the variables \npath\n and \npath2ptsToPcd\n accordingly:\n\n\npath=\"/home/willy/PredictingProteinInteractions/data/106Redoxins/Output/\"\npath2ptsToPcd=\"/home/willy/PredictingProteinInteractions/PCL/ptsToPcd/\"\n\n\n\n\nthen run \nptsToPcd.sh\n by typing:\n\n\n./ptsToPcd.sh\n\n\n\n\nTODO\n\n\n\n\nMake IsoSurfSimilarity take one argument specifiying the path to the settings-file.\n\n\nUncomment the lines in ptsToPcl.R that install the necessary packages\n\n\nmove the sources from ptsToPcl.R to a place in PredictingProteinInteractions\n\n\nchange \nptsToPcd.sh\n such that it accepts one argument specifying the path to the data\ninstead of the user having to edit \nptsToPcd.sh\n itself\n\n\n\n\n5. PreprocessingProteins\n\n\nGiven a \npdb-file\n this script generates the dx-files that are necessary in the further steps to analyse the similarities of the surfaces of the proteins.\n\n\nMutcomp\n\n\n(\nMutComp\n). \n\n\nThe standard path to the parameters-file is (for the use on the WS):\n\n\n/home/sysgen/Documents/LWB/TCL/MutComp/GUI/Parameters/parameters.txt\n\n\n\n\n. To run the script type:\n\n\n<pathToMutComp>./process.sh\n\n\n\n\nwhere \n is the path to the script.\nIf you want to use a different parameter-file just pass it as an argument to the script\n\n\n<pathToMutComp>./process.sh <path/to/a/different/parametersfile>\n\n\n\n\nOn my machine this call becomes: \n\n\n/home/willy/PredictingProteinInteractions/PreProcessingProteins/MutComp/./process.sh /home/willy/PredictingProteinInteractions/PreProcessingProteins/MutComp/GUI/Parameters/parametersForThesis.txt\n\n\n\n\nI strongly recommmend placing the parametersFile for each data-set in the same folder. \n\n\ncenterSelect\n\n\n(\ncenterSelect\n). \n\n\n6. Results\n\n\nScripts\n\n\nContains all the scripts that are necessary to reproduce the results that are presented in \nMasterthesis.pdf\n.\n\n\n\n\nClassification.R creates the evaluations presented in \nMasterthesis\n\n\n\n\nImages\n\n\nContains the images that were produced in the thesis with the implementations.\n\n\nTables\n\n\nContains the tables that were produced in the thesis with the implementations.\n\n\nTODO\n\n\nThesis\n\n\n\n\nWe/I\n\n\nMath-chapter\n\n\n\n\nResearch\n\n\n\n\nactive center\n\n\nuse the measure parameter\n\n\nadditional data tested with the model",
            "title": "Index pre 25.10"
        },
        {
            "location": "/index_pre_25.10/#predicting-protein-interactions",
            "text": "Predict protein-protein-interactions from raw pdb(protein-databank)-files. Find the thesis in  Masterthesis.pdf .   This document gives instructions on how to recreate the data that was used in the thesis. As a first step it only serves as a documentation for me personally. The idea is however to transfer this data directly to the CD that has to be submitted with the thesis. \n(Willy Bruhn, 13.4.2019)",
            "title": "Predicting Protein Interactions"
        },
        {
            "location": "/index_pre_25.10/#folder-hierarchy",
            "text": "\u251c\u2500\u2500 Classification\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 CaretClassification\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 NNClassification\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 additionalScripts\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 optimizeDifferentModels\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 predictingProteinInteractionsSettings\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 tfClassification\n\u251c\u2500\u2500 data\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 106Test\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 CompareProteinsOutput\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Input\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 NNexperiments\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 NNexperimentsKfoldCV\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Output\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 QuantileDistances\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Quantiles\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 RepSubOutput\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 UltraQuickRepSub\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 120Experiment\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Input\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 NNexperimentsKfoldCV\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 NNexperimentsKfoldCV (copy)\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Output\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Quantiles\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 UltraQuickRepSub\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 animals\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Evaluation\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Evaluation (copy)\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 models\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 __MACOSX\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 ModelNet10\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 MNist\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ModelNet10\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 AllQuantilesDir\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 AllQuantilesDirStandard\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 __MACOSX\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 ModelNet10\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 nonRigidWorld\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 nonrigid3d\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ObjectNet3D_cads\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 ObjectNet3D\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 old\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 106Redoxins\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 106RedoxinsWithAddionalPDBS_1\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 additionalPDBS_1\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 animals\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 pdbDownloaderExperiment\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Input\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 merged\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 NNexperimentsKfoldCV\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Output\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Quantiles\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 QuickRep\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 psb_db0-3\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 benchmark\n\u251c\u2500\u2500 docs\n\u251c\u2500\u2500 Manifold\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 3rd\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Eigen\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 glm\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 igl\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 unsupported\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 build\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 CMakeFiles\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 examples\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 src\n\u251c\u2500\u2500 MetricGeometry\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Benchmark\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 QuickRep\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ComparingProteins\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 EMDandClustering\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 LowerBounds\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Downsampling2Step\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 QuickRepeatedSubSampling\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 RepeatedSubsampling\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 FirstLowerBoundRelationOfPosAndNeg\n\u251c\u2500\u2500 PCL\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 IsoSurfSimilarity\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Debug\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Release\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 src\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 ptsToPcd\n\u251c\u2500\u2500 pdbDownloader\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Drugs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 merged\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 P03372_pdbs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 P06401_pdbs\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 P10275_pdbs\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 P11511_pdbs\n\u251c\u2500\u2500 PreProcessingProteins\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 centerSelect\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 AA_utility\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Ars\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 example\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 exampleImages\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 experimental\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 parameters\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 Redox\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 MutComp\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 APBS\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 deprecated\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 ExampleHierarchy\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 GUI\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 ImageCreator\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 ImageSimilarity\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 MovieCreator\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 mutationTest\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 Output\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 TclScripts\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 Tests\n\u251c\u2500\u2500 QuickStart\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 ModelTrain\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 bestModel\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 pdb\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 Proteins\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 RepeatedSubSampling\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Predictions\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 distances\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 proteins\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 Test\n\u2502\u00a0\u00a0     \u251c\u2500\u2500 pdb\n\u2502\u00a0\u00a0     \u2514\u2500\u2500 Proteins\n\u251c\u2500\u2500 Results\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Examples\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 MeasureCouplings\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Images\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 activeCenter\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 animalModels\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 FinalModel\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 longRange\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 protMeasureProjection\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 QuickRepSampling\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 2dPlots\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u251c\u2500\u2500 EmdVsGeo\n\u2502\u00a0\u00a0 \u2502\u00a0\u00a0 \u2514\u2500\u2500 Examples\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Scripts\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 Tables\n\u2502\u00a0\u00a0 \u251c\u2500\u2500 TablesProt\n\u2502\u00a0\u00a0 \u2514\u2500\u2500 TablesProtStatKFoldCV\n\u2514\u2500\u2500 setUp",
            "title": "Folder Hierarchy"
        },
        {
            "location": "/index_pre_25.10/#quickstart",
            "text": "Before you can run this example make sure that all dependencies are installed. A script that trys to do that can be found in  setUp/setUp.sh . Install all dependencies by typing:  ./setUp.sh  The folder  QuickStart  contains a fully setup example that demonstrates what this implementation can do.\nIn  ModelTrain/pdb/  pdb-files are stored to train a model. The file  ModelTrain/labels.txt  contains the labels of the proteins (in this case  functional  and  not_functional , you can specify any label however). In  Test/pdb/  the pdb-files are stored that predictions should be made for. To build the model type:  ../Classification/./predictingProteinInteractions.R  After the script is executed you should have an optimized model in  ModelTrain/bestModel/bestModel.RData . This file is in a binary-format and can only be read with the R-function  readDs . Additionally the computed distances are stored in  ModelTrain/RepeatedSubSampling/ .\nNow make predictions:  ../Classification/./predictingProteinInteractions.R --mode Predict --pdb_folder <path/To/QuickStart>/Test/pdb/ --MutCompOutPut <path/To/QuickStart>/Test/Proteins/  The predictions are now stored in  Predictions/predictions.txt . The prediction-file has three columns:\nthe name of the protein, probability for  functional  probability for  not_functional .\nThe output might look like this:     \"ind\"  \"functional\"  \"not_functional\"      \"013\"  0.554907677356657  0.445092322643343",
            "title": "QuickStart"
        },
        {
            "location": "/index_pre_25.10/#1-classification",
            "text": "Contains one script that does a classification given one distance-matrix and labels and other parameters for the model.  Input:\ndistance_f_name(\"\")           ... name of the file with the distances\n\ndistance_format(1)\n                           = 1 ... a simple distance-matrix\n                           = 3 ... a 3 column-data-frame. First column ProtA\n                                   second column ProtB, third column distance.\n\n labels_train                   ... name of the file with the labels\n\n evaluate(TRUE)        \n                           = 1 ... with crossvalidation the model is tested\n                           = 2 ... the model is tested on the testset\n                           = 0 ... the model makes predictions on new data\n                                   to which not all classlabels are given.\n\n evaluate_n                    ... number of times to repeat the classification.\n                                   Higher number leads to more accurate estimation.\n\n kNN                           ... number of nearest neighbors to use for the majority-\n                                   voting.\n\n test_split                    ... if(evaluate == 2) then this file specifies\n                                   the names to be tested with a model built from \n                                   the remaining names.",
            "title": "1. Classification"
        },
        {
            "location": "/index_pre_25.10/#2-data",
            "text": "",
            "title": "2. data"
        },
        {
            "location": "/index_pre_25.10/#106redoxins",
            "text": "Contains the protein-test-set.",
            "title": "106Redoxins"
        },
        {
            "location": "/index_pre_25.10/#additionalpdbs_1",
            "text": "Contains 19 Redoxins that are very simialr to Thrx.",
            "title": "additionalPDBS_1"
        },
        {
            "location": "/index_pre_25.10/#106redoxinswithadditionalpdbs_1",
            "text": "Contains the output of  106Redoxins  and  additionalPDBS_1  together in one folder. The files have to be in one folder for the calculation of the distances.",
            "title": "106RedoxinsWithAdditionalPDBS_1"
        },
        {
            "location": "/index_pre_25.10/#outputmerged",
            "text": "Folder with all the pts-files.  RepeatedSubsampling  ../../MetricGeometry/RepeatedSubsampling/FirstLowerBoundRelationOfPosAndNeg/cmakeBin/./main /home/willy/PredictingProteinInteractions/data/106RedoxinsWithAddionalPDBS_1/OutputMerged/ /home/willy/PredictingProteinInteractions/data/106RedoxinsWithAddionalPDBS_1/RepSubOutput/ /home/willy/PredictingProteinInteractions/data/106RedoxinsWithAddionalPDBS_1/OutputMerged/names.txt /home/willy/PredictingProteinInteractions/data/106RedoxinsWithAddionalPDBS_1/OutputMerged/names.txt 1 100 500 1 0.0 0.0 test 0  classification of RepeatedSubsampling  ../../Classification/./NNClassification.R --evaluate 0 --distance_format 3 --distance_f_name /home/willy/PredictingProteinInteractions/data/106RedoxinsWithAddionalPDBS_1/RepSubOutput/EMD_100_500_1.0000_1.0000_0.0000_0.0000_id_test.csv --kNN 10 --evaluate_n 1000 --test_split /home/willy/PredictingProteinInteractions/data/106Redoxins/Labels/testNames.txt --labels_train /home/willy/PredictingProteinInteractions/data/106Redoxins/Labels/labels.txt > predictions.txt",
            "title": "OutputMerged"
        },
        {
            "location": "/index_pre_25.10/#repsuboutput",
            "text": "Folder with the distances obtained with the repeated-subsampling-method.",
            "title": "RepSubOutput"
        },
        {
            "location": "/index_pre_25.10/#active-center",
            "text": "",
            "title": "Active Center"
        },
        {
            "location": "/index_pre_25.10/#animals",
            "text": "Contains the models of the animals also used in Memolis Paper.",
            "title": "animals"
        },
        {
            "location": "/index_pre_25.10/#3-metric-geometry",
            "text": "MetricGeometry/ComparingProteins/  contains the original implementation of Felix Berens cloned from Git-hub ( ComparingProteins , 04.13.2019).",
            "title": "3. Metric Geometry"
        },
        {
            "location": "/index_pre_25.10/#comparingproteins",
            "text": "See for more details  ComparingProteins .  Modifications:\n* Other shebang for linux  #!/usr/bin/Rscript",
            "title": "ComparingProteins"
        },
        {
            "location": "/index_pre_25.10/#downsampling2step",
            "text": "Contains the implementation of the 2-step-downsampling-procedure.",
            "title": "Downsampling2Step"
        },
        {
            "location": "/index_pre_25.10/#repeatedsubsampling",
            "text": "This folder contains the C++ implementation based on the original implementation of the  FLB   ComparingProteins  by Felix Berens. An example call would be:  pa=\"/home/willy/RedoxChallenges/MasterThesis/IsoSurfSimilarity/data/Output/\"\n./main $pa /home/willy/Schreibtisch/repeatedSampling/ /home/willy/RedoxChallenges/MasterThesis/IsoSurfSimilarity/ComparingProteins/LowerBounds/FirstLowerBoundRelationOfPosAndNeg/Example/proteinsTestSmall.txt /home/willy/RedoxChallenges/MasterThesis/IsoSurfSimilarity/ComparingProteins/LowerBounds/FirstLowerBoundRelationOfPosAndNeg/Example/proteinsTestSmall.txt 1 2 5 1 0.0 0.0 test 0  . More example-calls can be found in  /home/willy/PredictingProteinInteractions/MetricGeometry/RepeatedSubsampling/FirstLowerBoundRelationOfPosAndNeg/example .",
            "title": "RepeatedSubsampling"
        },
        {
            "location": "/index_pre_25.10/#usage",
            "text": "string path = argv[1];                                        // path to the folder with the proteins and pts-files\n  string outPath = argv[2];                                 // path to the folder where the output of this programm should be stored\n  string proteinsToCompareFile_target = argv[3];    // proteins to compare to, usually only Trx or all proteins\n  string proteinsToCompareFile = argv[4];               // all other proteins\n\n  measure = stod(argv[5]);                                  // model parameter, measure == 1 equals a uniform-distribution\n    number_of_selected_points = atoi(argv[6]);        // model parameters n\n    rounds = atoi(argv[7]);                                     // model parameters m\n\n  c1 = stod(argv[8]);                                 // model parameters\n  c2 = stod(argv[9]);                                 // model parameters\n  c3 = stod(argv[10]);                              // model parameters\n\n  num_bins = log2(rounds)+1;                        // model parameters\n\n  emd_list_id = argv[11];                           // for running multiple times with same parameters\n    bool allParameterCombinations = (bool)atoi(argv[12]); // for optimizing the modelparameters\n\n    int NNtoActCent = atoi(argv[13]);               // = 0 then all points are taken",
            "title": "Usage"
        },
        {
            "location": "/index_pre_25.10/#compilation",
            "text": "Go to  /FirstLowerBoundRelationOfPosAndNeg/cmakeBin/  and type  cmake ..  and then type   make  To run the program type:  ./main",
            "title": "Compilation"
        },
        {
            "location": "/index_pre_25.10/#4-pcl",
            "text": "Contains the implementation that makes use of the ICP(iterative-closest-point-algorithm) of the  Point-Cloud-Library .",
            "title": "4. PCL"
        },
        {
            "location": "/index_pre_25.10/#setting-up",
            "text": "With the script  \\IsoSurfSimilarity\\setUp.sh  some dependencies are installed and downloaded.",
            "title": "Setting Up"
        },
        {
            "location": "/index_pre_25.10/#usage_1",
            "text": "For this implementation a seperate file called  settings.ini  is used  ICP = 0                             ... if 0: a genetic algorithm is performed\n                                    ... if 1: the ICP-algorithm is performed\n\nICPiterations = 100                 ... if (ICP = 1): number of iterations to run ICP\n\nK = 0                               ... (if ICP = 0) In the step of finding the nearest neighbour in the potential of the other protein\n                                                     this number specifies how many points should be considered. Given two points a similarity is\n                                                     calculated depending on the distance to the active center and the local distribution of     \n                                                     positive and negative points. Under the K nearest neighbours to the given point in euclidean \n                                                     space the point is chosen that has the highest similarity.\n\n\nWindowSize = 200                    ... size of the small Window for display\n\ndisplayWeightTH = 10                ... show only points with a weight higher than \"displayWeightTH\".\n\nevalFunction = simpleSqrdDistances  ... (if ICP = 0) specifies which evaluation-function for the distance should be taken\n                                            if \"simpleSqrdDistances\" then for each point in X the closest point in Y is taken\n                                            and the corresponding distance is squared. This is done for all points in X.\n                                            All of these values are summed up. Analogously for Y. The sum of the two sums is\n                                            the final value.\n\ngenNum = 100                        ... (if ICP = 0) specifies how many generations the genetic algorithm should run for\n\noverWriteExistingInd = 1            ... if 1: overwrites a previous (if existing) solution, if the new one is better\n                                    ... if 0: if another solution exists this new solution is discarded\n\npath2Data = /home/willy/RedoxChallenges/MasterThesis/IsoSurfSimilarity/data/Output/\n                                    ... path to where the data is stored\n\npopSize = 25                        ... if (ICP = 0): number of individuals in the population for the\n                                        genetic algorithm\n\nprot1FileName = 000_Trx             ... name of the protein to be read in. This would for example be\n                                    /home/willy/RedoxChallenges/MasterThesis/IsoSurfSimilarity/data/Output/000_Trx/000_Trx.pcd\n\n                                    If you get an error-message showing something like \n                                    \"[pcl::PCDReader::readHeader] Could not find file \n                                    '/home/willy/PredictingProteinInteractions/data/106Redoxins/Output//000_Trx/000_Trx.pcd'.\n                                    Error loading object/scene file!\" \n                                    please make sure to run ptsToPcd.sh beforehand.\n\n\nprot2FileName = 103                 ... name of the protein to be read in. This would for example be\n                                    /home/willy/RedoxChallenges/MasterThesis/IsoSurfSimilarity/data/Output/103/103.pcd\n\nrange = 0                           ... (if ICP = 0) specifies an upper bound for the entries in the translation-vector of the individuals \n                                          in the genetic algorithm.\n\n                                          if range = 0: then only the rotations are optimized. (The proteins are centered on the active center.)\n\nvisInteractive = 1                  ... if 1: an interactive model is displayed\n                                    ... if 2: an interactive model is displayed \n                                              and the model is recalculated\n                                    ... else: a model is calculated",
            "title": "Usage"
        },
        {
            "location": "/index_pre_25.10/#generating-pcdpoint-cloud-data-files",
            "text": "The PCL uses its own file-format.\nWith the scripts  ptsToPcd.sh  and  ptsToPcl.R  the pcd-files can be generated.  In  ptsToPcd.sh  change the variables  path  and  path2ptsToPcd  accordingly:  path=\"/home/willy/PredictingProteinInteractions/data/106Redoxins/Output/\"\npath2ptsToPcd=\"/home/willy/PredictingProteinInteractions/PCL/ptsToPcd/\"  then run  ptsToPcd.sh  by typing:  ./ptsToPcd.sh",
            "title": "Generating pcd(Point-Cloud-Data)-files"
        },
        {
            "location": "/index_pre_25.10/#todo",
            "text": "Make IsoSurfSimilarity take one argument specifiying the path to the settings-file.  Uncomment the lines in ptsToPcl.R that install the necessary packages  move the sources from ptsToPcl.R to a place in PredictingProteinInteractions  change  ptsToPcd.sh  such that it accepts one argument specifying the path to the data\ninstead of the user having to edit  ptsToPcd.sh  itself",
            "title": "TODO"
        },
        {
            "location": "/index_pre_25.10/#5-preprocessingproteins",
            "text": "Given a  pdb-file  this script generates the dx-files that are necessary in the further steps to analyse the similarities of the surfaces of the proteins.",
            "title": "5. PreprocessingProteins"
        },
        {
            "location": "/index_pre_25.10/#mutcomp",
            "text": "( MutComp ).   The standard path to the parameters-file is (for the use on the WS):  /home/sysgen/Documents/LWB/TCL/MutComp/GUI/Parameters/parameters.txt  . To run the script type:  <pathToMutComp>./process.sh  where   is the path to the script.\nIf you want to use a different parameter-file just pass it as an argument to the script  <pathToMutComp>./process.sh <path/to/a/different/parametersfile>  On my machine this call becomes:   /home/willy/PredictingProteinInteractions/PreProcessingProteins/MutComp/./process.sh /home/willy/PredictingProteinInteractions/PreProcessingProteins/MutComp/GUI/Parameters/parametersForThesis.txt  I strongly recommmend placing the parametersFile for each data-set in the same folder.",
            "title": "Mutcomp"
        },
        {
            "location": "/index_pre_25.10/#centerselect",
            "text": "( centerSelect ).",
            "title": "centerSelect"
        },
        {
            "location": "/index_pre_25.10/#6-results",
            "text": "",
            "title": "6. Results"
        },
        {
            "location": "/index_pre_25.10/#scripts",
            "text": "Contains all the scripts that are necessary to reproduce the results that are presented in  Masterthesis.pdf .   Classification.R creates the evaluations presented in  Masterthesis",
            "title": "Scripts"
        },
        {
            "location": "/index_pre_25.10/#images",
            "text": "Contains the images that were produced in the thesis with the implementations.",
            "title": "Images"
        },
        {
            "location": "/index_pre_25.10/#tables",
            "text": "Contains the tables that were produced in the thesis with the implementations.",
            "title": "Tables"
        },
        {
            "location": "/index_pre_25.10/#todo_1",
            "text": "",
            "title": "TODO"
        },
        {
            "location": "/index_pre_25.10/#thesis",
            "text": "We/I  Math-chapter",
            "title": "Thesis"
        },
        {
            "location": "/index_pre_25.10/#research",
            "text": "active center  use the measure parameter  additional data tested with the model",
            "title": "Research"
        }
    ]
}